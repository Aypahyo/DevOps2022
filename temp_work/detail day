Schedule Day		
1 - 1	hexagonal architecture	* I can identify what the Domain of a hexagonal architecture is.
1 - 1	TDD, BDD, DDD	* I can explain the terms TDD, BDD and DDD
1 - 1	clean architecture	* I can draw the outlines of clean architecture
1 - 2	clean code	* I can explain clean code principles
2 - 2	semantic versioning	* I can explain semantic versioning
2 - 2	Dev, Ops, DevOps, SRE	* I can explain the differences between a Developer, an Operations Engineer, a DevOps Engineer and a Service Reliability Engineer
2 - 3	Python	* I can run a simple python program
3 - 4	Docker	* I can run a simple docker container
4 - 4	DevOps Loop	"* I can can draw and explain an infinite loop for software development
* I can show where automation accelarates the loop and ensures scaleablility of software development."
4 - 5	Patterns	* I can explain software engineering patterns.
5 - 5	Plugins	* I can explain what a plugin architecture is
5 - 5	Microservice	* I can explain what a microservice architecture is
5 - 5	Digital Twin	* I can explain what a digital twin architecture is
5 - 6	3 Tier	* I can explain what a 3 tier architecture is
6 - 6	Monoliths	* I can explain what a monolith and a distrubuted monolith is
6 - 6	git	"* I can work with git on the command line
* I can work with git in vs code"
6 - 7	secrets	* I can safely hide secrets from my git commits
7 - 8	markdown	* I can write documentation on github using markdown
8 - 9	Trello	* I can manage my tickets on Trello
9 - 10	Python	* I can implement a simple Hello Wolrd GUI using python and follow the loop step by step
10 - 10	Command Line	* I can redirect command line output to a file
10 - 11	Docker	* I can set up interacting containers using docker
11 - 12	docker-compose	* I can set up interacting containers using docker-compose
12 - 14	elk	* I can redirect container command line output to an ELK Stack
14 - 14	docker mounts	* I can explain docker volumes and filesystem mounts
14 - 15	docker ports	* I can explain network ports on docker
15 - 16	jenkins	* I can run jenkins in a container
16 - 16	linux	* I can explain 10 linux commands
16 - 17	minikube	"* I can install minikube on linux
* I can deploy a simple web app to minikube"
17 - 18	nginx	* I can create a bash script pipeline to build and serve static content g nginx
18 - 18	argocd, kubectl	* I can explain the difference between argocd and kubectl apply
18 - 19	python pipeline	* I can create a python script to build static nginx content
19 - 20	argocd	* I can update nginx static content on k8s using argocd
20 - 21	jenkins pipeline	* I can create and trigger a jenkins pipeline to build static nginx content
21 - 22	kubectl	* I can explain kubectl commands
22 - 22	linux	* I can explain 10 more linux commands
22 - 23	k8s	* I can work with a remote k8s installation
23 - 23	jenkins pipeline	* I can contribute to our team jenkins setup on a remote k8s
23 - 24	elk, banzai	* I can install an elk stack on k8s to redirect pod logs
24 - 25	prometheus, grafana	* I can install prometheus and grafana on k8s to scrape metrics
25 - 25	pv, pvc, pm	* I can contribute to our team WordPress and MySQL with Persistent Volumes
25 - 26	deployment	* I can set up continuous deployment for my hello world plugin
26 - 27	plugin	* I can modify my hello world plugin
27 - 28	prometheus, grafana, elk	* I can explain the difference between metrics, alerting, behaviour and log files
28 - 28	linux	* I can explain 10 more linux commands
28 - 32	analysis	"* I can explain what a chaos monkey is
* I can crate interesting problems in the value chain of others
* I can analyse my own value chain and fix errors"
32 - 33	groovy	* I can extend a jenkins file capabilities with custom groovy plugins
33 - 34	logs	* I can inspect the log message on the cluster and filter for my specific plugin
34 - 34	linux	* I can explain 10 more linux commands
34 - 34	issues	* I can create a minimal example to demonstrate issues to others
34 - 35	issues	* I can systematically recreate errors to analyze root causes
35 - 35	issues	* I can write tests to cover detected issues
35 - 36	helm	* I can install helm charts on k8s
36 - 36	https	* I can contribute to registering a wildcard domain to our shared cluster
36 - 37	https	* I can install a cert-manager and create lets encrypt certificates
37 - 37	https	* I contribute to updating all ingres traffic for https
37 - 38	dev	* I can use a content delivery network
38 - 38	udp	* I can consume iot / udp traffic in k8s
38 - 42	devops	* I can create a simple containerized web api and host it on k8s